{
  "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
          "Check_if_Infra_Stop_Operation": {
              "actions": {
                  "For_each_VIS_resource_stop_VM": {
                      "actions": {
                          "Database_Operations_set_to_true": {
                              "actions": {
                                  "For_every_database_instance": {
                                      "actions": {
                                          "For_every_database_instance_VMs": {
                                              "actions": {
                                                  "For_each_virtual_machine_list": {
                                                      "actions": {
                                                          "Deallocate_virtual_machine": {
                                                              "inputs": {
                                                                  "host": {
                                                                      "connection": {
                                                                          "name": "@parameters('$connections')['azurevm']['connectionId']"
                                                                      }
                                                                  },
                                                                  "method": "post",
                                                                  "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_virtual_machine_list')['virtualMachineId'], '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_virtual_machine_list')['virtualMachineId'], '/')[4])}/providers/Microsoft.Compute/virtualMachines/@{encodeURIComponent(split(items('For_each_virtual_machine_list')['virtualMachineId'], '/')[8])}/deallocate",
                                                                  "queries": {
                                                                      "api-version": "2019-12-01"
                                                                  }
                                                              },
                                                              "type": "ApiConnection"
                                                          }
                                                      },
                                                      "foreach": "@items('For_every_database_instance_VMs')?['properties']?['vmDetails']",
                                                      "type": "Foreach"
                                                  }
                                              },
                                              "foreach": "@items('For_every_database_instance')['value']",
                                              "type": "Foreach"
                                          }
                                      },
                                      "foreach": "@outputs('Parse_database_instance_information')['body']",
                                      "runAfter": {
                                          "Parse_database_instance_information": [
                                              "Succeeded"
                                          ]
                                      },
                                      "type": "Foreach"
                                  },
                                  "Get_Database_Instances_of_the_VIS": {
                                      "inputs": {
                                          "host": {
                                              "connection": {
                                                  "name": "@parameters('$connections')['arm']['connectionId']"
                                              }
                                          },
                                          "method": "get",
                                          "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop_VM'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop_VM'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop_VM'), '/')[8],'/databaseInstances')}",
                                          "queries": {
                                              "x-ms-api-version": "2023-10-01-preview"
                                          }
                                      },
                                      "type": "ApiConnection"
                                  },
                                  "Parse_database_instance_information": {
                                      "inputs": {
                                          "content": "@body('Read_database_instance_stop_operation_response')",
                                          "schema": {
                                              "items": {
                                                  "properties": {
                                                      "value": {
                                                          "items": {
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "location": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  },
                                                                  "properties": {
                                                                      "properties": {
                                                                          "databaseSid": {
                                                                              "type": "string"
                                                                          },
                                                                          "databaseType": {
                                                                              "type": "string"
                                                                          },
                                                                          "ipAddress": {
                                                                              "type": "string"
                                                                          },
                                                                          "subnet": {
                                                                              "type": "string"
                                                                          },
                                                                          "vmDetails": {
                                                                              "items": {
                                                                                  "properties": {
                                                                                      "virtualMachineId": {
                                                                                          "type": "string"
                                                                                      }
                                                                                  },
                                                                                  "required": [
                                                                                      "virtualMachineId"
                                                                                  ],
                                                                                  "type": "object"
                                                                              },
                                                                              "type": "array"
                                                                          }
                                                                      },
                                                                      "type": "object"
                                                                  },
                                                                  "systemData": {
                                                                      "properties": {
                                                                          "createdAt": {
                                                                              "type": "string"
                                                                          },
                                                                          "createdBy": {
                                                                              "type": "string"
                                                                          },
                                                                          "createdByType": {
                                                                              "type": "string"
                                                                          },
                                                                          "lastModifiedAt": {
                                                                              "type": "string"
                                                                          },
                                                                          "lastModifiedBy": {
                                                                              "type": "string"
                                                                          },
                                                                          "lastModifiedByType": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "type": "object"
                                                                  },
                                                                  "type": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "name",
                                                                  "type",
                                                                  "location",
                                                                  "systemData",
                                                                  "properties"
                                                              ],
                                                              "type": "object"
                                                          },
                                                          "type": "array"
                                                      }
                                                  },
                                                  "required": [
                                                      "value"
                                                  ],
                                                  "type": "object"
                                              },
                                              "type": "array"
                                          }
                                      },
                                      "runAfter": {
                                          "Get_Database_Instances_of_the_VIS": [
                                              "Succeeded"
                                          ]
                                      },
                                      "type": "ParseJson"
                                  }
                              },
                              "else": {
                                  "actions": {}
                              },
                              "expression": {
                                  "and": [
                                      {
                                          "equals": [
                                              "@parameters('IncludeDatabaseOperations')",
                                              true
                                          ]
                                      }
                                  ]
                              },
                              "type": "If"
                          },
                          "For_each_Application_Instance": {
                              "actions": {
                                  "For_each_app_VM": {
                                      "actions": {
                                          "Deallocate_app_VM": {
                                              "inputs": {
                                                  "host": {
                                                      "connection": {
                                                          "name": "@parameters('$connections')['azurevm']['connectionId']"
                                                      }
                                                  },
                                                  "method": "post",
                                                  "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_app_VM')['virtualMachineId'], '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_app_VM')['virtualMachineId'], '/')[4])}/providers/Microsoft.Compute/virtualMachines/@{encodeURIComponent(split(items('For_each_app_VM')['virtualMachineId'], '/')[8])}/deallocate",
                                                  "queries": {
                                                      "api-version": "2019-12-01"
                                                  }
                                              },
                                              "type": "ApiConnection"
                                          }
                                      },
                                      "foreach": "@item()?['properties']?['vmDetails']",
                                      "type": "Foreach"
                                  }
                              },
                              "foreach": "@outputs('Parse_App_Instance_Information')?['body']?['value']",
                              "runAfter": {
                                  "Parse_App_Instance_Information": [
                                      "Succeeded"
                                  ]
                              },
                              "type": "Foreach"
                          },
                          "For_each_Central_Instance": {
                              "actions": {
                                  "For_each_central_server_VM": {
                                      "actions": {
                                          "Deallocate_central_server_VM": {
                                              "inputs": {
                                                  "host": {
                                                      "connection": {
                                                          "name": "@parameters('$connections')['azurevm']['connectionId']"
                                                      }
                                                  },
                                                  "method": "post",
                                                  "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_central_server_VM')['virtualMachineId'], '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_central_server_VM')['virtualMachineId'], '/')[4])}/providers/Microsoft.Compute/virtualMachines/@{encodeURIComponent(split(items('For_each_central_server_VM')['virtualMachineId'], '/')[8])}/deallocate",
                                                  "queries": {
                                                      "api-version": "2019-12-01"
                                                  }
                                              },
                                              "type": "ApiConnection"
                                          }
                                      },
                                      "foreach": "@item()?['properties']?['vmDetails']",
                                      "type": "Foreach"
                                  }
                              },
                              "foreach": "@outputs('Parse_Central_Instance_Information')?['body']?['value']",
                              "runAfter": {
                                  "Parse_Central_Instance_Information": [
                                      "Succeeded"
                                  ]
                              },
                              "type": "Foreach"
                          },
                          "Get_App_Instances_of_the_VIS": {
                              "inputs": {
                                  "host": {
                                      "connection": {
                                          "name": "@parameters('$connections')['arm']['connectionId']"
                                      }
                                  },
                                  "method": "get",
                                  "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop_VM'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop_VM'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop_VM'), '/')[8],'/applicationInstances')}",
                                  "queries": {
                                      "x-ms-api-version": "2023-10-01-preview"
                                  }
                              },
                              "type": "ApiConnection"
                          },
                          "Get_Central_Instances_of_the_VIS": {
                              "inputs": {
                                  "host": {
                                      "connection": {
                                          "name": "@parameters('$connections')['arm']['connectionId']"
                                      }
                                  },
                                  "method": "get",
                                  "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop_VM'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop_VM'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop_VM'), '/')[8],'/centralInstances')}",
                                  "queries": {
                                      "x-ms-api-version": "2023-10-01-preview"
                                  }
                              },
                              "type": "ApiConnection"
                          },
                          "Parse_App_Instance_Information": {
                              "inputs": {
                                  "content": "@body('Get_App_Instances_of_the_VIS')",
                                  "schema": {
                                      "properties": {
                                          "value": {
                                              "items": {
                                                  "properties": {
                                                      "id": {
                                                          "type": "string"
                                                      },
                                                      "location": {
                                                          "type": "string"
                                                      },
                                                      "name": {
                                                          "type": "string"
                                                      },
                                                      "properties": {
                                                          "properties": {
                                                              "hostname": {
                                                                  "type": "string"
                                                              },
                                                              "instanceNo": {
                                                                  "type": "string"
                                                              },
                                                              "ipAddress": {
                                                                  "type": "string"
                                                              },
                                                              "subnet": {
                                                                  "type": "string"
                                                              },
                                                              "vmDetails": {
                                                                  "items": {
                                                                      "properties": {
                                                                          "virtualMachineId": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "virtualMachineId"
                                                                      ],
                                                                      "type": "object"
                                                                  },
                                                                  "type": "array"
                                                              }
                                                          },
                                                          "type": "object"
                                                      },
                                                      "systemData": {
                                                          "properties": {
                                                              "createdAt": {
                                                                  "type": "string"
                                                              },
                                                              "createdBy": {
                                                                  "type": "string"
                                                              },
                                                              "createdByType": {
                                                                  "type": "string"
                                                              },
                                                              "lastModifiedAt": {
                                                                  "type": "string"
                                                              },
                                                              "lastModifiedBy": {
                                                                  "type": "string"
                                                              },
                                                              "lastModifiedByType": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "type": "object"
                                                      },
                                                      "type": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "id",
                                                      "name",
                                                      "type",
                                                      "location",
                                                      "systemData",
                                                      "properties"
                                                  ],
                                                  "type": "object"
                                              },
                                              "type": "array"
                                          }
                                      },
                                      "type": "object"
                                  }
                              },
                              "runAfter": {
                                  "Get_App_Instances_of_the_VIS": [
                                      "Succeeded"
                                  ]
                              },
                              "type": "ParseJson"
                          },
                          "Parse_Central_Instance_Information": {
                              "inputs": {
                                  "content": "@body('Get_Central_Instances_of_the_VIS')",
                                  "schema": {
                                      "properties": {
                                          "value": {
                                              "items": {
                                                  "properties": {
                                                      "id": {
                                                          "type": "string"
                                                      },
                                                      "location": {
                                                          "type": "string"
                                                      },
                                                      "name": {
                                                          "type": "string"
                                                      },
                                                      "properties": {
                                                          "properties": {
                                                              "enqueueServerProperties": {
                                                                  "properties": {
                                                                      "health": {
                                                                          "type": "string"
                                                                      },
                                                                      "ipAddress": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "type": "object"
                                                              },
                                                              "gatewayServerProperties": {
                                                                  "properties": {
                                                                      "health": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "type": "object"
                                                              },
                                                              "health": {
                                                                  "type": "string"
                                                              },
                                                              "instanceNo": {
                                                                  "type": "string"
                                                              },
                                                              "messageServerProperties": {
                                                                  "properties": {
                                                                      "health": {
                                                                          "type": "string"
                                                                      },
                                                                      "ipAddress": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "type": "object"
                                                              },
                                                              "provisioningState": {
                                                                  "type": "string"
                                                              },
                                                              "status": {
                                                                  "type": "string"
                                                              },
                                                              "subnet": {
                                                                  "type": "string"
                                                              },
                                                              "vmDetails": {
                                                                  "items": {
                                                                      "properties": {
                                                                          "virtualMachineId": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "required": [
                                                                          "virtualMachineId"
                                                                      ],
                                                                      "type": "object"
                                                                  },
                                                                  "type": "array"
                                                              }
                                                          },
                                                          "type": "object"
                                                      },
                                                      "systemData": {
                                                          "properties": {
                                                              "createdAt": {
                                                                  "type": "string"
                                                              },
                                                              "createdBy": {
                                                                  "type": "string"
                                                              },
                                                              "createdByType": {
                                                                  "type": "string"
                                                              },
                                                              "lastModifiedAt": {
                                                                  "type": "string"
                                                              },
                                                              "lastModifiedBy": {
                                                                  "type": "string"
                                                              },
                                                              "lastModifiedByType": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "type": "object"
                                                      },
                                                      "type": {
                                                          "type": "string"
                                                      }
                                                  },
                                                  "required": [
                                                      "id",
                                                      "name",
                                                      "type",
                                                      "location",
                                                      "systemData",
                                                      "properties"
                                                  ],
                                                  "type": "object"
                                              },
                                              "type": "array"
                                          }
                                      },
                                      "type": "object"
                                  }
                              },
                              "runAfter": {
                                  "Get_Central_Instances_of_the_VIS": [
                                      "Succeeded"
                                  ]
                              },
                              "type": "ParseJson"
                          }
                      },
                      "foreach": "@parameters('ResourceName')",
                      "runtimeConfiguration": {
                          "concurrency": {
                              "repetitions": 20
                          }
                      },
                      "type": "Foreach"
                  }
              },
              "else": {
                  "actions": {}
              },
              "expression": {
                  "and": [
                      {
                          "equals": [
                              "@parameters('IncludeVirtualMachineOperation')",
                              true
                          ]
                      },
                      {
                          "equals": [
                              "@parameters('OperationName')",
                              "stop"
                          ]
                      }
                  ]
              },
              "runAfter": {
                  "SAP_operation_type": [
                      "Succeeded"
                  ]
              },
              "type": "If"
          },
          "SAP_operation_type": {
              "actions": {
                  "For_each_VIS_resource_start": {
                      "actions": {
                          "Database_start_operation": {
                              "actions": {
                                  "For_each_DB_instance_start": {
                                      "actions": {
                                          "Initiate_database_instance_start": {
                                              "inputs": {
                                                  "body": {
                                                      "startVm": "@parameters('IncludeVirtualMachineOperation')"
                                                  },
                                                  "host": {
                                                      "connection": {
                                                          "name": "@parameters('$connections')['arm']['connectionId']"
                                                      }
                                                  },
                                                  "method": "post",
                                                  "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_start'), '/')[8],'/databaseinstances/',items('For_each_DB_instance_start')?['name'])}/@{encodeURIComponent(parameters('OperationName'))}",
                                                  "queries": {
                                                      "x-ms-api-version": "2023-10-01-preview"
                                                  }
                                              },
                                              "type": "ApiConnection"
                                          }
                                      },
                                      "foreach": "@body('Parse_database_instance_start_operation_response')?['value']",
                                      "runAfter": {
                                          "Parse_database_instance_start_operation_response": [
                                              "Succeeded"
                                          ]
                                      },
                                      "type": "Foreach"
                                  },
                                  "Parse_database_instance_start_operation_response": {
                                      "inputs": {
                                          "content": "@body('Read_database_instance_start_operation_response')",
                                          "schema": {
                                              "properties": {
                                                  "value": {
                                                      "items": {
                                                          "properties": {
                                                              "id": {
                                                                  "type": "string"
                                                              },
                                                              "location": {
                                                                  "type": "string"
                                                              },
                                                              "name": {
                                                                  "type": "string"
                                                              },
                                                              "properties": {
                                                                  "properties": {
                                                                      "databaseSid": {
                                                                          "type": "string"
                                                                      },
                                                                      "databaseType": {
                                                                          "type": "string"
                                                                      },
                                                                      "ipAddress": {
                                                                          "type": "string"
                                                                      },
                                                                      "loadBalancerDetails": {
                                                                          "properties": {
                                                                              "id": {
                                                                                  "type": "string"
                                                                              }
                                                                          },
                                                                          "type": "object"
                                                                      },
                                                                      "provisioningState": {
                                                                          "type": "string"
                                                                      },
                                                                      "status": {
                                                                          "type": "string"
                                                                      },
                                                                      "subnet": {
                                                                          "type": "string"
                                                                      },
                                                                      "vmDetails": {
                                                                          "items": {
                                                                              "properties": {
                                                                                  "status": {
                                                                                      "type": "string"
                                                                                  },
                                                                                  "virtualMachineId": {
                                                                                      "type": "string"
                                                                                  }
                                                                              },
                                                                              "required": [
                                                                                  "virtualMachineId",
                                                                                  "status"
                                                                              ],
                                                                              "type": "object"
                                                                          },
                                                                          "type": "array"
                                                                      }
                                                                  },
                                                                  "type": "object"
                                                              },
                                                              "systemData": {
                                                                  "properties": {
                                                                      "createdAt": {
                                                                          "type": "string"
                                                                      },
                                                                      "createdBy": {
                                                                          "type": "string"
                                                                      },
                                                                      "createdByType": {
                                                                          "type": "string"
                                                                      },
                                                                      "lastModifiedAt": {
                                                                          "type": "string"
                                                                      },
                                                                      "lastModifiedBy": {
                                                                          "type": "string"
                                                                      },
                                                                      "lastModifiedByType": {
                                                                          "type": "string"
                                                                      }
                                                                  },
                                                                  "type": "object"
                                                              },
                                                              "tags": {
                                                                  "type": "object"
                                                              },
                                                              "type": {
                                                                  "type": "string"
                                                              }
                                                          },
                                                          "required": [
                                                              "id",
                                                              "name",
                                                              "type",
                                                              "location",
                                                              "systemData",
                                                              "properties"
                                                          ],
                                                          "type": "object"
                                                      },
                                                      "type": "array"
                                                  }
                                              },
                                              "type": "object"
                                          }
                                      },
                                      "runAfter": {
                                          "Read_database_instance_start_operation_response": [
                                              "Succeeded"
                                          ]
                                      },
                                      "type": "ParseJson"
                                  },
                                  "Read_database_instance_start_operation_response": {
                                      "inputs": {
                                          "host": {
                                              "connection": {
                                                  "name": "@parameters('$connections')['arm']['connectionId']"
                                              }
                                          },
                                          "method": "get",
                                          "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_start'), '/')[8],'/databaseInstances')}",
                                          "queries": {
                                              "x-ms-api-version": "2023-10-01-preview"
                                          }
                                      },
                                      "type": "ApiConnection"
                                  }
                              },
                              "else": {
                                  "actions": {}
                              },
                              "expression": {
                                  "and": [
                                      {
                                          "equals": [
                                              "@parameters('IncludeDatabaseOperations')",
                                              true
                                          ]
                                      }
                                  ]
                              },
                              "type": "If"
                          },
                          "Initiate_VIS_resource_start": {
                              "inputs": {
                                  "body": {
                                      "startVm": "@parameters('IncludeVirtualMachineOperation')"
                                  },
                                  "host": {
                                      "connection": {
                                          "name": "@parameters('$connections')['arm']['connectionId']"
                                      }
                                  },
                                  "method": "post",
                                  "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_start'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_start'), '/')[8])}/@{encodeURIComponent(parameters('OperationName'))}",
                                  "queries": {
                                      "x-ms-api-version": "2023-10-01-preview"
                                  }
                              },
                              "runAfter": {
                                  "Database_start_operation": [
                                      "Succeeded"
                                  ]
                              },
                              "type": "ApiConnection"
                          }
                      },
                      "foreach": "@parameters('ResourceName')",
                      "runtimeConfiguration": {
                          "concurrency": {
                              "repetitions": 1
                          }
                      },
                      "type": "Foreach"
                  }
              },
              "else": {
                  "actions": {
                      "For_each_VIS_resource_stop": {
                          "actions": {
                              "Database_stop_operation": {
                                  "actions": {
                                      "For_each_DB_instance_stop": {
                                          "actions": {
                                              "Initiate_database_instance_stop": {
                                                  "inputs": {
                                                      "body": {
                                                          "softStopTimeoutSeconds": "@parameters('SoftStopTimeout')"
                                                      },
                                                      "host": {
                                                          "connection": {
                                                              "name": "@parameters('$connections')['arm']['connectionId']"
                                                          }
                                                      },
                                                      "method": "post",
                                                      "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop'), '/')[8],'/databaseinstances/',items('For_each_DB_instance_stop')?['name'])}/@{encodeURIComponent(parameters('OperationName'))}",
                                                      "queries": {
                                                          "x-ms-api-version": "2023-10-01-preview"
                                                      }
                                                  },
                                                  "type": "ApiConnection"
                                              }
                                          },
                                          "foreach": "@body('Parse_database_instance_stop_operation_response')?['value']",
                                          "runAfter": {
                                              "Parse_database_instance_stop_operation_response": [
                                                  "Succeeded"
                                              ]
                                          },
                                          "type": "Foreach"
                                      },
                                      "Parse_database_instance_stop_operation_response": {
                                          "inputs": {
                                              "content": "@body('Read_database_instance_stop_operation_response')",
                                              "schema": {
                                                  "properties": {
                                                      "value": {
                                                          "items": {
                                                              "properties": {
                                                                  "id": {
                                                                      "type": "string"
                                                                  },
                                                                  "location": {
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "type": "string"
                                                                  },
                                                                  "properties": {
                                                                      "properties": {
                                                                          "databaseSid": {
                                                                              "type": "string"
                                                                          },
                                                                          "databaseType": {
                                                                              "type": "string"
                                                                          },
                                                                          "ipAddress": {
                                                                              "type": "string"
                                                                          },
                                                                          "loadBalancerDetails": {
                                                                              "properties": {
                                                                                  "id": {
                                                                                      "type": "string"
                                                                                  }
                                                                              },
                                                                              "type": "object"
                                                                          },
                                                                          "provisioningState": {
                                                                              "type": "string"
                                                                          },
                                                                          "status": {
                                                                              "type": "string"
                                                                          },
                                                                          "subnet": {
                                                                              "type": "string"
                                                                          },
                                                                          "vmDetails": {
                                                                              "items": {
                                                                                  "properties": {
                                                                                      "status": {
                                                                                          "type": "string"
                                                                                      },
                                                                                      "virtualMachineId": {
                                                                                          "type": "string"
                                                                                      }
                                                                                  },
                                                                                  "required": [
                                                                                      "virtualMachineId",
                                                                                      "status"
                                                                                  ],
                                                                                  "type": "object"
                                                                              },
                                                                              "type": "array"
                                                                          }
                                                                      },
                                                                      "type": "object"
                                                                  },
                                                                  "systemData": {
                                                                      "properties": {
                                                                          "createdAt": {
                                                                              "type": "string"
                                                                          },
                                                                          "createdBy": {
                                                                              "type": "string"
                                                                          },
                                                                          "createdByType": {
                                                                              "type": "string"
                                                                          },
                                                                          "lastModifiedAt": {
                                                                              "type": "string"
                                                                          },
                                                                          "lastModifiedBy": {
                                                                              "type": "string"
                                                                          },
                                                                          "lastModifiedByType": {
                                                                              "type": "string"
                                                                          }
                                                                      },
                                                                      "type": "object"
                                                                  },
                                                                  "tags": {
                                                                      "type": "object"
                                                                  },
                                                                  "type": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "required": [
                                                                  "id",
                                                                  "name",
                                                                  "type",
                                                                  "location",
                                                                  "systemData",
                                                                  "properties"
                                                              ],
                                                              "type": "object"
                                                          },
                                                          "type": "array"
                                                      }
                                                  },
                                                  "type": "object"
                                              }
                                          },
                                          "runAfter": {
                                              "Read_database_instance_stop_operation_response": [
                                                  "Succeeded"
                                              ]
                                          },
                                          "type": "ParseJson"
                                      },
                                      "Read_database_instance_stop_operation_response": {
                                          "inputs": {
                                              "host": {
                                                  "connection": {
                                                      "name": "@parameters('$connections')['arm']['connectionId']"
                                                  }
                                              },
                                              "method": "get",
                                              "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop'), '/')[8],'/databaseInstances')}",
                                              "queries": {
                                                  "x-ms-api-version": "2023-10-01-preview"
                                              }
                                          },
                                          "type": "ApiConnection"
                                      }
                                  },
                                  "else": {
                                      "actions": {}
                                  },
                                  "expression": {
                                      "and": [
                                          {
                                              "equals": [
                                                  "@parameters('IncludeDatabaseOperations')",
                                                  true
                                              ]
                                          }
                                      ]
                                  },
                                  "runAfter": {
                                      "Initiate_VIS_resource_stop": [
                                          "Succeeded"
                                      ]
                                  },
                                  "type": "If"
                              },
                              "Initiate_VIS_resource_stop": {
                                  "inputs": {
                                      "body": {
                                          "softStopTimeoutSeconds": "@parameters('SoftStopTimeout')"
                                      },
                                      "host": {
                                          "connection": {
                                              "name": "@parameters('$connections')['arm']['connectionId']"
                                          }
                                      },
                                      "method": "post",
                                      "path": "/subscriptions/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[2])}/resourcegroups/@{encodeURIComponent(split(items('For_each_VIS_resource_stop'), '/')[4])}/providers/@{encodeURIComponent('Microsoft.Workloads')}/@{encodeURIComponent('sapVirtualInstances/',split(items('For_each_VIS_resource_stop'), '/')[8])}/@{encodeURIComponent(parameters('OperationName'))}",
                                      "queries": {
                                          "x-ms-api-version": "2023-10-01-preview"
                                      }
                                  },
                                  "type": "ApiConnection"
                              }
                          },
                          "foreach": "@parameters('ResourceName')",
                          "runtimeConfiguration": {
                              "concurrency": {
                                  "repetitions": 20
                              }
                          },
                          "type": "Foreach"
                      }
                  }
              },
              "expression": {
                  "and": [
                      {
                          "equals": [
                              "@parameters('OperationName')",
                              "start"
                          ]
                      }
                  ]
              },
              "runAfter": {},
              "type": "If"
          }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {
          "$connections": {
              "defaultValue": {},
              "type": "Object"
          },
          "IncludeDatabaseOperations": {
              "defaultValue": true,
              "type": "Bool"
          },
          "IncludeVirtualMachineOperation": {
              "defaultValue": true,
              "type": "Bool"
          },
          "OperationName": {
              "defaultValue": "stop",
              "type": "String"
          },
          "ResourceName": {
              "defaultValue": [
                  "/subscriptions/7235b861-9c47-4957-8841-e5f0b305a68a/resourceGroups/Adhoc-Prod-E2E-SVI-02Jul-266f-avset-sles-sap-12-sp5-gen2/providers/Microsoft.Workloads/sapVirtualInstances/R45"
              ],
              "type": "Array"
          },
          "SoftStopTimeout": {
              "defaultValue": 0,
              "type": "Int"
          }
      },
      "triggers": {
          "Recurrence": {
              "evaluatedRecurrence": {
                  "frequency": "Day",
                  "interval": 1,
                  "schedule": {
                      "hours": [
                          22,
                          0,
                          2,
                          4,
                          6,
                          8,
                          10,
                          "12",
                          "14",
                          "16",
                          "18",
                          "20"
                      ],
                      "minutes": [
                          "0"
                      ]
                  },
                  "startTime": "2024-07-18T16:31:06.581Z",
                  "timeZone": "India Standard Time"
              },
              "recurrence": {
                  "frequency": "Day",
                  "interval": 1,
                  "schedule": {
                      "hours": [
                          22,
                          0,
                          2,
                          4,
                          6,
                          8,
                          10,
                          "12",
                          "14",
                          "16",
                          "18",
                          "20"
                      ],
                      "minutes": [
                          "0"
                      ]
                  },
                  "startTime": "2024-07-18T16:31:06.581Z",
                  "timeZone": "India Standard Time"
              },
              "type": "Recurrence"
          }
      }
  },
  "parameters": {
      "$connections": {
          "value": {
              "arm": {
                  "connectionId": "/subscriptions/49d64d54-e966-4c46-a868-1999802b762c/resourceGroups/ayushi-test-rg/providers/Microsoft.Web/connections/sapops-arm-fwfphixwuuznu",
                  "connectionName": "variables('armConnectionName')",
                  "connectionProperties": {
                      "authentication": {
                          "identity": "/subscriptions/49d64d54-e966-4c46-a868-1999802b762c/resourceGroups/SAP-E2ETest-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/E2E-RBAC-MSI",
                          "type": "ManagedServiceIdentity"
                      }
                  },
                  "id": "/subscriptions/49d64d54-e966-4c46-a868-1999802b762c/providers/Microsoft.Web/locations/eastus/managedApis/arm"
              },
              "azurevm": {
                  "connectionId": "/subscriptions/49d64d54-e966-4c46-a868-1999802b762c/resourceGroups/ayushi-test-rg/providers/Microsoft.Web/connections/azurevm",
                  "connectionName": "azurevm",
                  "id": "/subscriptions/49d64d54-e966-4c46-a868-1999802b762c/providers/Microsoft.Web/locations/eastus/managedApis/azurevm"
              }
          }
      }
  }
}